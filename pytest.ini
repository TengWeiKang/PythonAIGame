[tool:pytest]
# Pytest configuration for Python Game Detection System

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --durations=10
    --junit-xml=test-results.xml

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    security: Security tests
    slow: Slow running tests (> 5 seconds)
    external: Tests requiring external services
    gpu: Tests requiring GPU
    webcam: Tests requiring webcam hardware
    regression: Regression tests
    smoke: Smoke tests for basic functionality

# Minimum version requirements
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# addopts = -n auto  # Uncomment to enable pytest-xdist parallel execution

# Coverage configuration
[coverage:run]
source = app
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:json]
output = coverage.json